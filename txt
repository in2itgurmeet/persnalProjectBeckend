📒 Node.js + MongoDB Backend (BookMyShow Clone)

1️⃣ Initialize Project
----------------------
mkdir bookmyshow-backend
cd bookmyshow-backend
npm init -y
# Initializes a new Node.js project and creates package.json

2️⃣ Install Packages
--------------------

🟢 Core Packages
-----------------
npm install express mongoose dotenv cors
# express → Framework to create REST APIs and handle routing
# mongoose → ODM to easily connect and interact with MongoDB using schemas
# dotenv → Loads environment variables from .env file (DB connection, API keys)
# cors → Enables Cross-Origin requests so Angular frontend can access backend

🔒 Authentication & Security
----------------------------
npm install bcryptjs jsonwebtoken cookie-parser helmet
# bcryptjs → Hashes passwords securely before saving in DB
# jsonwebtoken → Creates tokens for user login sessions
# cookie-parser → Parses cookies sent by clients (if using cookie-based auth)
# helmet → Sets secure HTTP headers to prevent attacks

🛠 Utilities
------------
npm install morgan express-validator
# morgan → Logs HTTP requests for debugging and monitoring
# express-validator → Validates user inputs like email, password, phone number

📂 File Uploads
----------------
npm install multer cloudinary
# multer → Handles file uploads from forms (movie posters, banners)
# cloudinary → Stores images in cloud for easy access and CDN

💳 Payment Integration
----------------------
npm install stripe razorpay
# stripe → Payment gateway for credit/debit card payments
# razorpay → Payment gateway popular in India

🛠 Dev Tool
------------
npm install -D nodemon
# nodemon → Automatically restarts server on code changes during development

✅ This notepad now explains what each package does and why it is used.


bookmyshow-backend/
│
├── node_modules/          # Node.js packages
├── uploads/               # Uploaded images (posters, banners)
├── .env                   # Environment variables (DB, API keys)
├── package.json           # Project dependencies & scripts
├── server.js / index.js   # Entry point of the app
│
├── config/                # Configuration files
│   └── db.js              # MongoDB connection
│
├── models/                # MongoDB schemas
│   ├── User.js
│   ├── Movie.js
│   ├── Theater.js
│   ├── Show.js
│   └── Booking.js
│
├── routes/                # API routes
│   ├── authRoutes.js
│   ├── movieRoutes.js
│   ├── theaterRoutes.js
│   ├── showRoutes.js
│   └── bookingRoutes.js
│
├── controllers/           # Logic for routes
│   ├── authController.js
│   ├── movieController.js
│   ├── theaterController.js
│   ├── showController.js
│   └── bookingController.js
│
├── middlewares/           # Middleware functions
│   ├── authMiddleware.js  # JWT verification
│   └── errorMiddleware.js # Error handling
│
├── utils/                 # Helper functions
│   └── cloudinary.js      # Cloudinary image upload helper
│
└── services/              # Business logic (optional)
    └── paymentService.js  # Stripe/Razorpay integration


PORT=5000
MONGO_URI=mongodb+srv://initgurmeet_db_user:gurmeet1234@cluster0.wqaffmn.mongodb.net/sample_mflix
JWT_SECRET=your_jwt_secret
STRIPE_KEY=your_stripe_key
RAZORPAY_KEY=your_razorpay_key
RAZORPAY_SECRET=your_razorpay_secret
CLOUD_NAME=your_cloudinary_name
CLOUD_KEY=your_cloudinary_key
CLOUD_SECRET=your_cloudinary_secret
